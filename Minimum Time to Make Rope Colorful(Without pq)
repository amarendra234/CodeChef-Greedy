class Solution {
public:
    int minCost(string colors, vector<int>& neededTime) {
        
         int ans=0;
         int n=colors.size();
         //priority_queue<int,vector<int>,greater<int>>pq;
         char pre='!';
         int current_max=INT_MIN;
         int count=0;
         for(int i=0;i<n;i++){
            if(colors[i]==pre){
                current_max=max(current_max,neededTime[i]);
                ans+=neededTime[i];
                count++;
            }else{
                if(count>=1){
                    ans-=current_max;
                }
                ans+=neededTime[i];
                count=1;
                current_max=neededTime[i];
            }
            pre=colors[i];
         }
         if(count>=1){
            ans-=current_max;
         }
        return ans;
    }
};
